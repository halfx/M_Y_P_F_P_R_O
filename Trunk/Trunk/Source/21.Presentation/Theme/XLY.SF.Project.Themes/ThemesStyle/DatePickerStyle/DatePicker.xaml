<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
                    xmlns:local="clr-namespace:XLY.SF.Project.Themes.CustromControl">
    <Style TargetType="local:DateTimePicker">
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Background" Value="#485374"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DateTimePicker">
                    <ControlTemplate.Resources>
                        <ControlTemplate x:Key="ItemCT" TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="Transparent">
                                <Border x:Name="br" Background="Transparent" Width="34" Height="34" CornerRadius="0">
                                    <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                </Border>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" Value="#379be6" TargetName="br"/>
                                    <Setter Property="CornerRadius" Value="30" TargetName="br"/>
                                    <Setter Property="Effect" TargetName="br">
                                        <Setter.Value>
                                            <DropShadowEffect Color="#379be6" ShadowDepth="0" BlurRadius="10"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                        <Style TargetType="TextBox">
                            <Setter Property="Width" Value="50"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="Margin" Value="0 5 0 0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <StackPanel Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Rectangle Height="1" Fill="#596482"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!--翻页按钮-->
                        <Style x:Key="TruningStyle" TargetType="Button">
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template" Value="{DynamicResource btn_EmptyCT}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <ee:ColorToneEffect DarkColor="White" LightColor="White"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MinHeight="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding MinWidth}" 
                            Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid Margin="5" x:Name="gd_Main">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="tb_Input" IsEnabled="False" Template="{DynamicResource tb_EmptyCt}" Margin="0" Style="{x:Null}"
                                     Text="{Binding SelectDateTime,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DateTimePicker},StringFormat={}yyyy-MM-dd HH:mm:ss}" 
                                     VerticalAlignment="Center" Foreground="White" BorderThickness="0" Background="Transparent"/>
                            <ToggleButton x:Name="tgb_PopupStatus" Grid.Column="1" Focusable="False" Margin="5 0 0 0">
                                <Image Source="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/data_filter_calendar.png"/>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Width" Value="14"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Template" Value="{DynamicResource tlbtn_NullCt}"/>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup x:Name="dateSelector" Placement="Bottom" AllowsTransparency="True" StaysOpen="False" VerticalOffset="7" PlacementTarget="{Binding ElementName=gd_Main}">
                                <Popup.Resources>
                                    <!--#region 动画-->
                                    <Storyboard x:Key="OnDayToMonth">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMonthToYear">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnYearToMonth">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnMonthToDay">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                    <!--还原动画-->
                                    <Storyboard x:Key="OnReset">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gd_DayContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="gd_DayContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="gd_DayContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="br_Time">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="MonthContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="YearContainer">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                    <!--#region 时间选择容器动画-->
                                    <Storyboard x:Key="OnLostFocus">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="br_Time">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseIn"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="br_Time">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnGotFocus">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="br_Time">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="br_Time">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <!--#endregion-->

                                    <!--翻页动画-->
                                    <Storyboard x:Key="OnBeforePage">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Container">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Container">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="OnAfterPage">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Container">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Container">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <!--#endregion-->
                                </Popup.Resources>
                                <Popup.Triggers>
                                    <EventTrigger RoutedEvent="GotFocus" SourceName="Hour">
                                        <BeginStoryboard Storyboard="{StaticResource OnGotFocus}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="GotFocus" SourceName="Minute">
                                        <BeginStoryboard Storyboard="{StaticResource OnGotFocus}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="GotFocus" SourceName="Second">
                                        <BeginStoryboard Storyboard="{StaticResource OnGotFocus}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="LostFocus" SourceName="Hour">
                                        <BeginStoryboard Storyboard="{StaticResource OnLostFocus}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="LostFocus" SourceName="Minute">
                                        <BeginStoryboard Storyboard="{StaticResource OnLostFocus}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="LostFocus" SourceName="Second">
                                        <BeginStoryboard Storyboard="{StaticResource OnLostFocus}"/>
                                    </EventTrigger>
                                </Popup.Triggers>
                                <Border Background="#485374" Width="290" Height="360" CornerRadius="4">
                                    <Grid x:Name="gd_PopupMain" Margin="18 12 18 12">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 10">
                                            <Button x:Name="btn_Before" Style="{StaticResource TruningStyle}">
                                                <Image Source="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Toggle_Btn_normal.png" RenderTransformOrigin="0.5,0.5">
                                                    <Image.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform Angle="90"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Image.RenderTransform>
                                                </Image>
                                            </Button>
                                            <Button x:Name="btn_DateTitle" Opacity="0.5" BorderThickness="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                    Background="Transparent" Template="{DynamicResource btn_EmptyCT}" Width="120" Height="25" Margin="20 0 20 0"/>
                                            <Button x:Name="btn_After" Style="{StaticResource TruningStyle}">
                                                <Image Source="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Toggle_Btn_normal.png" RenderTransformOrigin="0.5,0.5">
                                                    <Image.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform Angle="-90"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Image.RenderTransform>
                                                </Image>
                                            </Button>
                                        </StackPanel>
                                        <Grid Grid.Row="1" x:Name="Container" RenderTransformOrigin="0.5,0.5">
                                            <Grid.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Grid.RenderTransform>
                                            <!--日期-->
                                            <Grid x:Name="gd_DayContainer" Background="#485374" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                                <Grid.Resources>
                                                    <Style TargetType="RadioButton">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Setter Property="Width" Value="34"/>
                                                        <Setter Property="Height" Value="34"/>
                                                        <Setter Property="Margin" Value="0"/>
                                                        <Setter Property="GroupName" Value="XLYDateItemGroupName"/>
                                                        <Setter Property="Template" Value="{StaticResource ItemCT}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Grid.RenderTransform>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="34"/>
                                                    <ColumnDefinition Width="34"/>
                                                    <ColumnDefinition Width="34"/>
                                                    <ColumnDefinition Width="34"/>
                                                    <ColumnDefinition Width="34"/>
                                                    <ColumnDefinition Width="34"/>
                                                    <ColumnDefinition Width="34"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <!--星期-->
                                                <TextBlock x:Name="Sun" Grid.Column="0" Foreground="#9ba5b9" Text="日" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock x:Name="Mon" Grid.Column="1" Foreground="#9ba5b9" Text="一" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock x:Name="Tues" Grid.Column="2" Foreground="#9ba5b9" Text="二" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock x:Name="Wed" Grid.Column="3" Foreground="#9ba5b9" Text="三" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock x:Name="Thur" Grid.Column="4" Foreground="#9ba5b9" Text="四" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock x:Name="Fri" Grid.Column="5" Foreground="#9ba5b9" Text="五" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock x:Name="Sat" Grid.Column="6" Foreground="#9ba5b9" Text="六" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <StackPanel x:Name="DayContainer" Grid.Row="1" Grid.ColumnSpan="7"/>
                                            </Grid>
                                            <!--月份-->
                                            <WrapPanel x:Name="MonthContainer" Background="#485374" RenderTransformOrigin="0.5,0.5" Opacity="0">
                                                <WrapPanel.Resources>
                                                    <Style TargetType="RadioButton">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Setter Property="Width" Value="55"/>
                                                        <Setter Property="Height" Value="55"/>
                                                        <Setter Property="Margin" Value="2"/>
                                                        <Setter Property="GroupName" Value="XLYMonthGroupName"/>
                                                        <Setter Property="Template" Value="{StaticResource ItemCT}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </WrapPanel.Resources>
                                                <WrapPanel.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="0" ScaleY="0"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </WrapPanel.RenderTransform>
                                                <!--#region 月份-->
                                                <RadioButton x:Name="month1" Tag="1" Content="一月" Foreground="White"/>
                                                <RadioButton x:Name="month2" Tag="2" Content="二月" Foreground="White"/>
                                                <RadioButton x:Name="month3" Tag="3" Content="三月" Foreground="White"/>
                                                <RadioButton x:Name="month4" Tag="4" Content="四月" Foreground="White"/>
                                                <RadioButton x:Name="month5" Tag="5" Content="五月" Foreground="White"/>
                                                <RadioButton x:Name="month6" Tag="6" Content="六月" Foreground="White"/>
                                                <RadioButton x:Name="month7" Tag="7" Content="七月" Foreground="White"/>
                                                <RadioButton x:Name="month8" Tag="8" Content="八月" Foreground="White"/>
                                                <RadioButton x:Name="month9" Tag="9" Content="九月" Foreground="White"/>
                                                <RadioButton x:Name="month10" Tag="10" Content="十月" Foreground="White"/>
                                                <RadioButton x:Name="month11" Tag="11" Content="十一月" Foreground="White"/>
                                                <RadioButton x:Name="month12" Tag="12" Content="十二月" Foreground="White"/>
                                                <!--#endregion-->
                                            </WrapPanel>
                                            <!--年-->
                                            <WrapPanel x:Name="YearContainer" Background="#485374" RenderTransformOrigin="0.5,0.5" Opacity="0">
                                                <WrapPanel.Resources>
                                                    <Style TargetType="RadioButton">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Setter Property="Width" Value="55"/>
                                                        <Setter Property="Height" Value="55"/>
                                                        <Setter Property="Margin" Value="2"/>
                                                        <Setter Property="GroupName" Value="XLYYearGroupName"/>
                                                        <Setter Property="Template" Value="{StaticResource ItemCT}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="Content" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </WrapPanel.Resources>
                                                <WrapPanel.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="0" ScaleY="0"/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </WrapPanel.RenderTransform>
                                            </WrapPanel>
                                        </Grid>
                                        <!--时间容器-->
                                        <Border x:Name="br_Time" Visibility="Collapsed" Opacity="0" Grid.Row="1" VerticalAlignment="Bottom" Margin="0 0 0 5" HorizontalAlignment="Center" CornerRadius="5" Background="#5c6992">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="0" BlurRadius="13"/>
                                            </Border.Effect>
                                            <Border.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Width" Value="34"/>
                                                    <Setter Property="Height" Value="34"/>
                                                    <Setter Property="Margin" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Grid Background="Transparent">
                                                                    <Border x:Name="br" Background="Transparent" Width="27" Height="27">
                                                                        <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                                                    </Border>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                        <Setter Property="Background" Value="#379be6" TargetName="br"/>
                                                                        <Setter Property="CornerRadius" Value="15" TargetName="br"/>
                                                                        <Setter Property="Effect" TargetName="br">
                                                                            <Setter.Value>
                                                                                <DropShadowEffect Color="#379be6" ShadowDepth="0" BlurRadius="10"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="Content" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Resources>
                                            <!--时间容器-->
                                            <WrapPanel x:Name="wp_Time" Margin="5"/>
                                        </Border>

                                        <!--时间-->
                                        <StackPanel x:Name="sp_TimeInput" Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="7" HorizontalAlignment="Center">
                                            <TextBox x:Name="Hour" Tag="H" Text="0" HorizontalContentAlignment="Center" Foreground="White"/>
                                            <TextBlock x:Name="tb_Hour" Text="时" Margin="5 0 5 0" Foreground="#9ba5b9" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <TextBox x:Name="Minute" Tag="M" Text="0" HorizontalContentAlignment="Center" Foreground="White"/>
                                            <TextBlock x:Name="tb_Minute" Text="分" Margin="5 0 5 0" Foreground="#9ba5b9" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <TextBox x:Name="Second" Tag="S" Text="0" HorizontalContentAlignment="Center" Foreground="White"/>
                                            <TextBlock x:Name="tb_Second" Text="秒" Margin="5 0 0 0" Foreground="#9ba5b9" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </StackPanel>

                                        <StackPanel Grid.Row="3" Margin="0 20 0 0" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
                                            <Button x:Name="tb_Today" Content="今天" Width="55" Height="24" Margin="0 0 10 0"/>
                                            <Button x:Name="tb_Ok" Content="确定" Width="55" Height="24"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChinese" Value="false">
                            <Setter Property="Text" TargetName="Sun" Value="Sun"/>
                            <Setter Property="Text" TargetName="Mon" Value="Mon"/>
                            <Setter Property="Text" TargetName="Tues" Value="Tues"/>
                            <Setter Property="Text" TargetName="Wed" Value="Wed"/>
                            <Setter Property="Text" TargetName="Thur" Value="Thur"/>
                            <Setter Property="Text" TargetName="Fri" Value="Fri"/>
                            <Setter Property="Text" TargetName="Sat" Value="Sat"/>
                            <Setter Property="Text" TargetName="tb_Hour" Value="Hr"/>
                            <Setter Property="Text" TargetName="tb_Minute" Value="Min"/>
                            <Setter Property="Text" TargetName="tb_Second" Value="Sec"/>
                            <Setter Property="Content" TargetName="tb_Today" Value="Today"/>
                            <Setter Property="Content" TargetName="tb_Ok" Value="Confirm"/>
                            <Setter Property="Content" TargetName="month1" Value="Jan"/>
                            <Setter Property="Content" TargetName="month2" Value="Feb"/>
                            <Setter Property="Content" TargetName="month3" Value="Mar"/>
                            <Setter Property="Content" TargetName="month4" Value="Apr"/>
                            <Setter Property="Content" TargetName="month5" Value="May"/>
                            <Setter Property="Content" TargetName="month6" Value="Jun"/>
                            <Setter Property="Content" TargetName="month7" Value="Jul"/>
                            <Setter Property="Content" TargetName="month8" Value="Aug"/>
                            <Setter Property="Content" TargetName="month9" Value="Sept"/>
                            <Setter Property="Content" TargetName="month10" Value="Oct"/>
                            <Setter Property="Content" TargetName="month11" Value="Nov"/>
                            <Setter Property="Content" TargetName="month12" Value="Dec"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>