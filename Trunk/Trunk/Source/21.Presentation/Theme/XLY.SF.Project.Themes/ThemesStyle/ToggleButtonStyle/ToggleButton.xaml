<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
                    xmlns:behavior="clr-namespace:XLY.SF.Project.Themes.Behavior"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
		            xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
                    xmlns:local="clr-namespace:XLY.SF.Project.Themes.CustromControl">

    <!--空样式-->
    <ControlTemplate x:Key="tlbtn_NullCt" TargetType="ToggleButton">
        <Border Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
        </Border>
    </ControlTemplate>




    <!--自定义控件-->
    <!--带图标的复选框-->
    <Style TargetType="local:IconCheckBox">
        <Setter Property="Border.CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="10 0 10 0"/>
        <Setter Property="Foreground" Value="#6e7891"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconCheckBox">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding Border.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel x:Name="sp_Content" Orientation="Horizontal" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Image Width="{Binding IconWidth,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconCheckBox}}" 
                                   Height="{Binding IconHeight,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconCheckBox}}" 
                                   Source="{Binding Icon,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconCheckBox}}" Margin="0 0 5 0"/>
                            <ContentPresenter/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Effect" TargetName="sp_Content">
                                <Setter.Value>
                                    <ee:EmbossedEffect Color="#23b9be"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <!--控件模版-->
    <ControlTemplate x:Key="tb_CbDefaultCt" TargetType="{x:Type ToggleButton}">
        <Border x:Name="br" CornerRadius="5" Background="Transparent">
            <Path x:Name="p_content" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M1,1 L7.0000001,6.9999998 M5.5879985,7.0000012 L11.587998,1.0000011" 
                      Stretch="Fill" Stroke="#9ba5b9" StrokeThickness="2" Height="8" Width="12"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" TargetName="p_content" Value="White"/>
                <Setter Property="Background" TargetName="br" Value="#46506e"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <BitmapImage x:Key="TriangleToggleButtonHoverImage"
                 UriSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Toggle_Btn_hover.png" />
    <BitmapImage x:Key="TriangleToggleButtonNormalImage"
                 UriSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Toggle_Btn_hover.png" />

    <Style x:Key="TriangleToggleButton" 
           TargetType="{x:Type ToggleButton}">
        <Setter Property="RenderTransformOrigin"
                Value="0.5,0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Image x:Name="Img"
                           Stretch="Fill"
                           RenderTransformOrigin="0.5,0.5"
                           Source="{StaticResource TriangleToggleButtonNormalImage}">
                        <Image.RenderTransform>
                            <RotateTransform />
                        </Image.RenderTransform>
                    </Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Img"
                                    Property="Source"
                                    Value="{StaticResource TriangleToggleButtonHoverImage}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="RenderTransform.Angle"
                                                Storyboard.TargetName="Img">
                                        <DoubleAnimation To="180"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="RenderTransform.Angle"
                                                Storyboard.TargetName="Img">
                                        <DoubleAnimation To="0"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region 选中后右上角带勾-->
    <ControlTemplate x:Key="ToggleBtnWithFile_Ct" TargetType="{x:Type ToggleButton}">
        <Border x:Name="br" CornerRadius="13.5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
            <Grid>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <Image x:Name="img_Checked" Visibility="Collapsed" Source="Mirror_Checked.png" Width="38" Height="38" VerticalAlignment="Top" HorizontalAlignment="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#657192" TargetName="br"/>
                <Setter Property="Background" Value="#14FFFFFF" TargetName="br"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="img_Checked"/>
                <Setter Property="BorderBrush" Value="#379be6" TargetName="br"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion-->



    <!--样式-->
    <!--主界面最大化和还原-->
    <Style x:Key="tlbtn_MaxsizeAndNormal" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template" Value="{DynamicResource tlbtn_NullCt}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Maxsize_normal.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Normal_normal.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Maxsize_hover.png"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false"/>
                    <Condition Property="IsPressed" Value="true"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Maxsize_clik.png"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Normal_clik.png"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true"/>
                    <Condition Property="IsPressed" Value="true"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Normal_clik.png"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--主界面菜单-->
    <Style x:Key="tlbtn_MainMenu" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Template" Value="{DynamicResource tlbtn_NullCt}"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/MainMenu_Normal.png"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/MainMenu_hover.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/MainMenu_clik.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--树节点展开状态按钮-->
    <Style x:Key="tb_treeItemExpand" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template" Value="{DynamicResource tlbtn_NullCt}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Icons/TreeViewExpandIcon.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Icons/TreeViewPutIcon.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--导出树节点展开状态按钮-->
    <Style x:Key="dc_treeItemExpand" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template" Value="{DynamicResource tlbtn_NullCt}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Icons/TreeViewExportExpandIcon.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Icons/TreeViewExportExpandIcon.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/XLY.SF.Project.Themes;component/Resources/Images/Icons/TreeViewExportPutIcon.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#region 文件输入控件-->
    <Style x:Key="InputTextToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5 0 5 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <TextBlock Foreground="{TemplateBinding Foreground}" TextWrapping="Wrap" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{Binding Padding}"
                                   Text="{Binding Content,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent">
                                <TextBox Text="{Binding Content,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                                             TextWrapping="Wrap" BorderThickness="1" Margin="{Binding Padding}" Foreground="White" Style="{x:Null}">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border Background="#414b69" CornerRadius="2">
                                                <ScrollViewer x:Name="PART_ContentHost" Margin="2 0 2 0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
</ResourceDictionary>